import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import { Jua } from 'next/font/google'
import styles from '@/styles/Home.module.sass'
import cn from 'classnames';
import { createClient } from 'next-sanity'

import { Logo } from '../../components/Logo';

import menu from '../styles/asstes/menu-burger.png';
import arrow from '../styles/asstes/angle-right.png';
import img from '../styles/asstes/skoki.png';
import heart from '../styles/asstes/heart.png';
import Link from 'next/link'
import { useState } from 'react'

const inter = Inter({ subsets: ['latin'] })


export default function Home(props: any) {
  const [categoryArrey, setCategory] = useState(['Sport', 'Na Drodze', 'Biznes'])
  const articles = props.articles

  // const categoryArrey = ['Sport']

  const CategoryGenerator = (props: any) => {

    const ListGenerator = (props: any) => {
      return (
      <Link
        href={props.url ? props.url : '#'}
      >
        <div className={styles.articleContainer}>
            <div className={styles.articleTop}>
              <div className={styles.reactionsWrapper}>
                <div className={styles.heartContainer}>
                  <Image
                    src={heart}
                    width={60}
                    height={57}
                    alt='heart IMG'
                    priority
                    className={styles.heartImg}
                  />
                </div>
                <div className={styles.reactionCounter}>
                  {props.likes < 1000 ? props.likes : ( props.likes / 100 ) + " k"}
                </div>
              </div>
              <span className={styles.targetHTML}>
                {props.website}
              </span>
            </div>
          <div className={styles.headerContainer}>
            <h1 className={styles.articleHeader}>{props.box}</h1>
          </div>
          { props.img == undefined ?
              <Image
                src={img}
                width={450}
                height={250}
                alt='Article IMG'
                priority
                className={styles.noImg}
              />
            :
              <Image
                src={props.img}
                width={450}
                height={250}
                alt='Article IMG'
                priority
                className={styles.articleImg}
              />
          }
        </div>
      </Link>
      )
    }

   const ItemsList = () => {
     const array = articles.filter(x => {
      if(x.category === props.item) {
        return x;
      }
     })

     return array.map((item, index) => <ListGenerator key={index} box={item.title} url={item.url} website={item.website} likes={item.likes} img={item.photo}/>)
   }


    return (
      <>
        <div className={styles.categoryHeader}>
        <h1 className={inter.className}>{props.item}</h1>
          <Image
            src={arrow}
            width={20}
            height={20}
            alt='arrow IMG'
            className={styles.arrowImg}
          />
        </div>
        <div className={styles.itemsList}>
          {ItemsList()}
        </div>
      </>
    )
  }

  const CategoryList = categoryArrey.map( item => <CategoryGenerator item={item} />)

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.navbarContainer}>
        <nav className={styles.navbar}>
          <Logo/>
          <span className={styles.menuContainer}>
            <Image
              src={menu}
              width={30}
              height={30}
              alt='Menu IMG'
              priority
              className={styles.menuImg}
            />
          </span>
        </nav>
      </div>
      <main className={styles.main}>
        <div className={styles.mainContainer}>
          {CategoryList}
        </div>
      </main>
    </>
  )
}
const client = createClient({
  projectId: "5scbkc2c",
  dataset: "production",
  apiVersion: "2022-03-25",
  useCdn: false
});

export async function getStaticProps() {
  const articles = await client.fetch(`*[_type == "post"]`);
  return {
    props: {
      articles
    }
  }
}
